# =================================================================
# Project Da Vinci - Continuous Integration Workflow v2.0
# File: .github/workflows/ci.yml
# Purpose: To act as an automated Quality Gate for all Pull Requests
#          targeting the main branch.
# =================================================================

name: Project Da Vinci CI Quality Gate

# -----------------------------------------------------------------
# 1. 觸發器 (Trigger) - 已升級
# -----------------------------------------------------------------
# 此工作流現在只在創建或更新一個指向 'main' 分支的 Pull Request 時觸發。
on:
  pull_request:
    branches: [ "main" ]

# -----------------------------------------------------------------
# 2. 作業 (Jobs)
# -----------------------------------------------------------------
jobs:
  # 我們定義一個名為 'build-and-test' 的核心作業。
  build-and-test:
    # 此作業將運行在 GitHub 提供的最新版 Ubuntu 虛擬環境中。
    runs-on: ubuntu-latest

    # -------------------------------------------------------------
    # 3. 步驟 (Steps)
    # -------------------------------------------------------------
    steps:
      # --- 步驟 1: 代碼檢出 ---
      # 使用官方的 'checkout' action 將倉庫代碼下載到虛擬環境中。
      - name: Checkout Code
        uses: actions/checkout@v4

      # --- 步驟 2: 設置 JDK ---
      # 設置 Java 環境以匹配我們 pom.xml 中定義的 <java.version>。
      # 注意：此處使用 Java 17 是為了與專案配置嚴格對齊，確保環境一致性。
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin' # Eclipse Temurin, 一個可靠的 OpenJDK 發行版
          cache: 'maven'         # 自動緩存 Maven 依賴，加速後續構建

      # --- 步驟 3: Maven 構建與測試 ---
      # 執行核心的 Maven 命令。
      # 'clean' 清理舊的構建產物。
      # 'install' 編譯代碼、運行測試，並將產物安裝到本地 Maven 倉庫。
      # '-B' (Batch mode) 使日誌輸出更簡潔，適合 CI 環境。
      - name: Build and Test with Maven
        run: mvn -B clean install

      # --- 步驟 4: 構建 Docker 鏡像 (驗證階段) ---
      # 此步驟驗證我們的 Dockerfile 是否能成功構建出鏡像。
      # 我們暫時不將鏡像推送到任何倉庫。

      # 首先，設置 Docker Buildx，這是一個先進的構建器後端。
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 為 gateway-service 構建鏡像
      - name: Build Gateway Service Docker Image
        run: docker build -t gateway-service:ci-build --file src/gateway-service/Dockerfile .

      # 為 beacon-service 構建鏡像
      - name: Build Beacon Service Docker Image
        run: docker build -t beacon-service:ci-build --file src/beacon-service/Dockerfile .